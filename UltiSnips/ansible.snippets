# vim: set ft=ansible:

snippet apt "Apt declaration" !b
- name: install $1
  sudo: yes
  apt:
    pkg: $2
    state: latest
endsnippet


snippet template "Template declaration" !b
- name: $1
  sudo: yes
  template:
    src: $2
    dest: $3
    owner: $4
    group: $5
endsnippet


snippet yum "Yum declaration" !b
- name: install $1
  sudo: yes
  yum:
    pkg: $2
    state: latest
endsnippet


snippet service "Service declaration" !b
- name: $1
  sudo: yes
  service:
    name: $2
    enabled: yes
    state: $3
endsnippet


snippet user "User declaration" !b
- name: add user $1
  sudo: yes
  user:
    name: $1
    shell: ${2:/bin/bash}
    state: present
endsnippet


snippet file "File declaration" !b
- name: $1
  sudo: yes
  file:
    path: $2
    owner: $3
    group: $4
    state: $5
endsnippet


snippet copy "Copy declaration" !b
- name: $1
  sudo: yes
  copy:
    src: $2
    dest: $3
    owner: $4
    group: $5
    mode: ${6:0644}
endsnippet


snippet pip "Pip declaration" !b
- name: install $1
  sudo: yes
  pip:
endsnippet


snippet django "Django declaration" !b
- name: $1
  sudo: yes
  django_manage:
    command: $2
    app_path: $3
endsnippet


snippet apt_repository "Apt_repository declaration" !b
- name: $1
  sudo: yes
  apt_repository:
    repo: $2
    state: present
endsnippet


snippet command "Command declaration" !b
- name: $1
  sudo: yes
  command: $2
  args:
    chdir: $3
    creates: $4
endsnippet


snippet apt_key "Apt_key declaration" !b
- name: $1
  sudo: yes
  apt_key:
    url: $2
    state: present
endsnippet


snippet django_manage "Django_manage declaration" !b
- name: $1
  sudo: yes
  sudo_user: "{{ webapp_user }}"
  django_manage:
    app_path: $2
    command: $3
    virtualenv: "~{{ webapp_user }}/.virtualenvs/$4"
endsnippet


snippet git "Git declaration" !b
- name: $1
  git:
    repo: $2
    dest: $3
    accept_hostkey: yes
endsnippet


snippet get_url "Get_url declaration" !b
- name: $1
  get_url:
    url: $2
    dest: $3
    sha256sum: $4
endsnippet


snippet cron "Cron declaration" !b
- name: $1
  sudo: yes
  sudo_user: $2
  cron:
    name: $3
    state: ${4:present}
    job: $5
endsnippet


snippet unarchive "Unarchive declaration" !b
- name: $1
  unarchive:
    src: $2
    dest: $3
    copy: ${4:no}
endsnippet


snippet mysql_db "Mysql_db declaration" !b
- name: $1
  sudo: yes
  mysql_db:
    name: $2
    state: present
endsnippet


snippet mysql_user "Mysql_user declaration" !b
- name: $1
  sudo: yes
  mysql_user:
    name: $2
    password: $3
    priv: $4.*:ALL
    state: present
endsnippet


snippet authorized_key "Authorized_keys declaration" !b
- name: $1
  sudo: yes
  authorized_key:
    key: $2
    manage_dir: ${3:yes}
    user: $4
    state: ${5:present}
endsnippet


snippet subversion "Subversion declaration" !b
- name: $1
  subversion:
    repo: $2
    dest: $3
endsnippet

snippet gem "Gem declaration" !b
- name: $1
  gem:
    name: $2
    state: ${3:present}
endsnippet

snippet postgresql_db "Postgresql DB declaration" !b
- name: $1
  sudo: yes
  sudo_user: postgres
  postgresql_db:
    name: $2
    encoding: 'UTF-8'
    template: 'template0'
endsnippet

snippet postgresql_user "Postgresql user declaration" !b
- name: $1
  sudo: yes
  sudo_user: postgres
  postgresql_user:
    name: $2
    password: $3
    db: $4
endsnippet

snippet npm "NPM declaration" !b
- name: $1
  sudo: yes
  npm:
    name: $2
    global: yes
endsnippet

snippet shell "Shell declaration" !b
- name: $1
  sudo: yes
  shell: $2
  args:
    chdir: $3
    creates: $4
endsnippet

snippet synchronize "Sync declaration" !b
- name: $1
  sudo: yes
  synchronize:
    src: $2
    dest: $3
endsnippet

snippet lineinfile "Lineinfile declaration" !b
- name: $1
  lineinfile:
    dest: $2
    regexp: $3
    line: $4
    state: ${5:present}
endsnippet

snippet wait_for "Wait for port/file" !b
- name: $1
  wait_for:
    host: $2
    port: $3
    delay: $4
endsnippet
